// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Canny_Thresh
NumericMatrix Canny_Thresh(NumericMatrix dmat, std::string bitdepth, int lowThreshold, int ratio, int kernel_size);
RcppExport SEXP feature2_Canny_Thresh(SEXP dmatSEXP, SEXP bitdepthSEXP, SEXP lowThresholdSEXP, SEXP ratioSEXP, SEXP kernel_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< std::string >::type bitdepth(bitdepthSEXP);
    Rcpp::traits::input_parameter< int >::type lowThreshold(lowThresholdSEXP);
    Rcpp::traits::input_parameter< int >::type ratio(ratioSEXP);
    Rcpp::traits::input_parameter< int >::type kernel_size(kernel_sizeSEXP);
    __result = Rcpp::wrap(Canny_Thresh(dmat, bitdepth, lowThreshold, ratio, kernel_size));
    return __result;
END_RCPP
}
// testscale
void testscale(NumericMatrix dmat, std::string bitdepth, bool printQ);
RcppExport SEXP feature2_testscale(SEXP dmatSEXP, SEXP bitdepthSEXP, SEXP printQSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< std::string >::type bitdepth(bitdepthSEXP);
    Rcpp::traits::input_parameter< bool >::type printQ(printQSEXP);
    testscale(dmat, bitdepth, printQ);
    return R_NilValue;
END_RCPP
}
// testConvert
NumericMatrix testConvert(NumericMatrix dmat, bool printQ);
RcppExport SEXP feature2_testConvert(SEXP dmatSEXP, SEXP printQSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< bool >::type printQ(printQSEXP);
    __result = Rcpp::wrap(testConvert(dmat, printQ));
    return __result;
END_RCPP
}
// DFTMag2D
NumericMatrix DFTMag2D(NumericMatrix dmat, std::string bitdepth);
RcppExport SEXP feature2_DFTMag2D(SEXP dmatSEXP, SEXP bitdepthSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< std::string >::type bitdepth(bitdepthSEXP);
    __result = Rcpp::wrap(DFTMag2D(dmat, bitdepth));
    return __result;
END_RCPP
}
// Display2D_openCV
void Display2D_openCV(NumericMatrix dmat, int rowWidth, int colWidth, std::string bitdepth, std::string file_ext, bool printQ, std::string exe_path);
RcppExport SEXP feature2_Display2D_openCV(SEXP dmatSEXP, SEXP rowWidthSEXP, SEXP colWidthSEXP, SEXP bitdepthSEXP, SEXP file_extSEXP, SEXP printQSEXP, SEXP exe_pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< int >::type rowWidth(rowWidthSEXP);
    Rcpp::traits::input_parameter< int >::type colWidth(colWidthSEXP);
    Rcpp::traits::input_parameter< std::string >::type bitdepth(bitdepthSEXP);
    Rcpp::traits::input_parameter< std::string >::type file_ext(file_extSEXP);
    Rcpp::traits::input_parameter< bool >::type printQ(printQSEXP);
    Rcpp::traits::input_parameter< std::string >::type exe_path(exe_pathSEXP);
    Display2D_openCV(dmat, rowWidth, colWidth, bitdepth, file_ext, printQ, exe_path);
    return R_NilValue;
END_RCPP
}
// Filter2D
NumericMatrix Filter2D(NumericMatrix dmat, NumericMatrix kernel, std::string bitdepth);
RcppExport SEXP feature2_Filter2D(SEXP dmatSEXP, SEXP kernelSEXP, SEXP bitdepthSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< std::string >::type bitdepth(bitdepthSEXP);
    __result = Rcpp::wrap(Filter2D(dmat, kernel, bitdepth));
    return __result;
END_RCPP
}
// numvec_to_python
void numvec_to_python(std::string name, NumericVector x);
RcppExport SEXP feature2_numvec_to_python(SEXP nameSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    numvec_to_python(name, x);
    return R_NilValue;
END_RCPP
}
// pyrun
void pyrun(std::string command);
RcppExport SEXP feature2_pyrun(SEXP commandSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type command(commandSEXP);
    pyrun(command);
    return R_NilValue;
END_RCPP
}
// initialize_python
void initialize_python();
RcppExport SEXP feature2_initialize_python() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    initialize_python();
    return R_NilValue;
END_RCPP
}
// finalize_python
void finalize_python();
RcppExport SEXP feature2_finalize_python() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    finalize_python();
    return R_NilValue;
END_RCPP
}
// Resize
NumericMatrix Resize(NumericMatrix dmat, uint num_rows, uint num_cols);
RcppExport SEXP feature2_Resize(SEXP dmatSEXP, SEXP num_rowsSEXP, SEXP num_colsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< uint >::type num_rows(num_rowsSEXP);
    Rcpp::traits::input_parameter< uint >::type num_cols(num_colsSEXP);
    __result = Rcpp::wrap(Resize(dmat, num_rows, num_cols));
    return __result;
END_RCPP
}
// Sobel
NumericMatrix Sobel(NumericMatrix dmat, std::string bitdepth, int ddepth, int dx, int dy, int ksize, double scale, double delta, int borderType);
RcppExport SEXP feature2_Sobel(SEXP dmatSEXP, SEXP bitdepthSEXP, SEXP ddepthSEXP, SEXP dxSEXP, SEXP dySEXP, SEXP ksizeSEXP, SEXP scaleSEXP, SEXP deltaSEXP, SEXP borderTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< std::string >::type bitdepth(bitdepthSEXP);
    Rcpp::traits::input_parameter< int >::type ddepth(ddepthSEXP);
    Rcpp::traits::input_parameter< int >::type dx(dxSEXP);
    Rcpp::traits::input_parameter< int >::type dy(dySEXP);
    Rcpp::traits::input_parameter< int >::type ksize(ksizeSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type borderType(borderTypeSEXP);
    __result = Rcpp::wrap(Sobel(dmat, bitdepth, ddepth, dx, dy, ksize, scale, delta, borderType));
    return __result;
END_RCPP
}
// WriteMat
void WriteMat(NumericMatrix dmat, std::string bitdepth, std::string fpath);
RcppExport SEXP feature2_WriteMat(SEXP dmatSEXP, SEXP bitdepthSEXP, SEXP fpathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< std::string >::type bitdepth(bitdepthSEXP);
    Rcpp::traits::input_parameter< std::string >::type fpath(fpathSEXP);
    WriteMat(dmat, bitdepth, fpath);
    return R_NilValue;
END_RCPP
}
